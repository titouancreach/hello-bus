{"version":3,"sources":["style.js","Home.js","fetchSchedule.js","Schedule.js","App.js","serviceWorker.js","index.js"],"names":["cardTransition","css","_templateObject","mauto","margin","Home","react_default","a","createElement","Fragment","Link","to","className","cx","background","react_fontawesome_index_es","icon","makePair","line","make","chunks","length","_chunks","Object","toArray","b","rest","slice","concat","toConsumableArray","split","makeQuery","lines","stop","chunk","map","_ref2","_ref3","slicedToArray","sens","join","q","row","timezone","sort","dataset","fetchSchedule","_ref4","asyncToGenerator","regenerator_default","mark","_callee","_ref5","data","wrap","_context","prev","next","axios","get","params","sent","abrupt","records","x","departure","Date","fields","depart","idligne","nomcourtligne","idcourse","this","_x","_x2","apply","arguments","Placeholder","dist_default","color","fadeIn","withRouter","_ref","_match$params","match","_useSchedule","_useState","useState","_useState2","isFetching","setIsFetching","_useState3","_useState4","schedule","setSchedule","useEffect","then","catch","finally","useSchedule","_useSchedule2","id","ligne","key","distanceInWordsToNow","library","add","faBus","faHome","faArrowCircleLeft","App","HashRouter","Switch","Route","exact","path","component","Schedule","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wZAEO,IAAMA,EAAiBC,YAAHC,KASdC,EAAQF,YAAI,CAACG,OAAQ,SCkCnBC,MArCf,WACE,OACEC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,kDACHC,UAAWC,YACT,yFACAb,EACAC,YAAI,CAACa,WAAY,cAGnBR,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,YAAGV,IACjBG,EAAAC,EAAAC,cAAA,QAAMI,UAAU,YACdN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAK,SAExBV,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,gBAGJN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,GAAG,sCACHC,UAAWC,YACT,yFACAb,EACAC,YAAI,CAACa,WAAY,cAGnBR,EAAAC,EAAAC,cAAA,OAAKI,UAAWC,YAAGV,IACjBG,EAAAC,EAAAC,cAAA,QAAMI,UAAU,YACdN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAK,UAExBV,EAAAC,EAAAC,cAAA,QAAMI,UAAU,gBAAhB,gHC1BJK,EAAW,SAAAC,GASf,OAPa,SAAPC,EAAOC,GACX,GAAsB,IAAlBA,EAAOC,OAAc,MAAO,GAC3B,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CACqBH,GAAjBb,EADJe,EAAA,GACOG,EADPH,EAAA,GACaI,EADbJ,EAAAK,MAAA,GAEH,OAAQ,CAACpB,EAAGkB,IAAZG,OAAAL,OAAAM,EAAA,EAAAN,CAAmBJ,EAAKO,KAGrBP,CARQD,EAAKY,MAAM,OAWtBC,EAAY,SAACC,EAAOC,GACxB,IAAMC,EAAQF,EACXG,IAAI,SAAAC,GAAkB,IAAAC,EAAAd,OAAAe,EAAA,EAAAf,CAAAa,EAAA,GAAhBlB,EAAgBmB,EAAA,GAAVE,EAAUF,EAAA,GACrB,yBAAAT,OAA0BV,EAA1B,gBAAAU,OAA6CW,EAA7C,QAEDC,KAAK,QAUR,MARW,CACTC,EAAC,IAAAb,OAAMM,EAAN,oBAAAN,OAA8BK,EAA9B,KACDS,IAAK,GACLC,SAAU,eACVC,KAAM,UACNC,QAAS,oCAMbC,EAAA,eAAAC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAA0B,EAAA1C,EAAA2C,KAAe,SAAAC,EAAOjC,EAAMe,GAAb,IAAAD,EAAAS,EAAAW,EAAAC,EAAA,OAAAJ,EAAA1C,EAAA+C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACPzB,EAAQf,EAASC,GACjBuB,EAAIV,EAAUC,EAAOC,GAFdsB,EAAAE,KAAA,EAIQC,IAAMC,IAAN,sDAEnB,CAACC,OAAQnB,IANE,cAAAW,EAAAG,EAAAM,KAINR,EAJMD,EAINC,KAJME,EAAAO,OAAA,SAQKT,EAhDCU,QACJ5B,IAAI,SAAA6B,GACjB,MAAO,CACLC,UAAW,IAAIC,KAAKF,EAAEG,OAAOC,QAC7BC,QAASL,EAAEG,OAAOG,cAClBC,SAAUP,EAAEG,OAAOI,aAmCV,wBAAAhB,EAAAtB,SAAAkB,EAAAqB,SAAf,gBAAAC,EAAAC,GAAA,OAAA3B,EAAA4B,MAAAH,KAAAI,YAAA,GCLA,SAASC,IACP,OACEvE,EAAAC,EAAAC,cAAA,OAAKI,UAAWT,GACdG,EAAAC,EAAAC,cAACsE,EAAAvE,EAAD,CAASwE,MAAM,QAAQC,OAAO,UAkCrBC,kBA7Bf,SAAAC,GAAoC,IAAAC,EAAAD,EAARE,MACCxB,OADOyB,EAhCpC,SAAqBnE,EAAMe,GAAM,IAAAqD,EACKC,oBAAS,GADdC,EAAAjE,OAAAe,EAAA,EAAAf,CAAA+D,EAAA,GACxBG,EADwBD,EAAA,GACZE,EADYF,EAAA,GAAAG,EAECJ,mBAAS,MAFVK,EAAArE,OAAAe,EAAA,EAAAf,CAAAoE,EAAA,GAExBE,EAFwBD,EAAA,GAEdE,EAFcF,EAAA,GAqB/B,OAjBAG,oBACE,WACEL,GAAc,GACd5C,EAAc5B,EAAMe,GACjB+D,KAAK,SAAA3C,GACJyC,EAAYzC,KAEb4C,MAAM,WACLH,EAAY,QAEbI,QAAQ,WACPR,GAAc,MAGpB,CAACxE,EAAMe,IAGF,CAACwD,EAAYI,GAaWM,CAFGhB,EAC3BjE,KAD2BiE,EACrBlD,MADqBmE,EAAA7E,OAAAe,EAAA,EAAAf,CAAA8D,EAAA,GAE3BI,EAF2BW,EAAA,GAEfP,EAFeO,EAAA,GAIlC,OACE9F,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,MACIgF,GAAcI,EACdA,EAAS1D,IAAI,SAAAC,GAAA,IAAYiE,EAAZjE,EAAEmC,SAAuB+B,EAAzBlE,EAAgBiC,QAAgBJ,EAAhC7B,EAAgC6B,UAAhC,OACX3D,EAAAC,EAAAC,cAAA,OACE+F,IAAKF,EACLzF,UAAWC,YAAE,4CAAAe,OACiC5B,EADjC,0DAEXC,YAAI,CAACa,WAAY,cAGnBR,EAAAC,EAAAC,cAAA,OAAKI,UAAU,KAAK0F,GACpBhG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,SAAS4F,+BAAqBvC,OAIjD3D,EAAAC,EAAAC,cAACqE,EAAD,MAEFvE,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,IAAIC,UAAU,oCACrBN,EAAAC,EAAAC,cAACO,EAAA,EAAD,CAAiBC,KAAK,qDCxD9ByF,IAAQC,IAAIC,IAAOC,IAAQC,KAeZC,MAbf,WACE,OACExG,EAAAC,EAAAC,cAACuG,EAAA,EAAD,KACEzG,EAAAC,EAAAC,cAAA,OAAKI,UAAU,yDACbN,EAAAC,EAAAC,cAACwG,EAAA,EAAD,KACE1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW/G,IACjCC,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAOE,KAAK,wBAAwBC,UAAWC,QCRrCC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASrC,MACvB,2DCZNsC,IAASC,OAAOrH,EAAAC,EAAAC,cAACoH,EAAD,MAASC,SAASC,eAAe,SDuH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjC,KAAK,SAAAkC,GACjCA,EAAaC","file":"static/js/main.5e0c2d5a.chunk.js","sourcesContent":["import {css} from 'emotion'\n\nexport const cardTransition = css`\n  transform: scale(1);\n  transition: all 0.3s ease 0s;\n\n  &:hover {\n    outline: rgba(29, 29, 29, 0.1) solid 4px;\n  }\n`\n\nexport const mauto = css({margin: 'auto'})\n","import React from 'react'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {Link} from 'react-router-dom'\nimport {cx, css} from 'emotion'\n\nimport {cardTransition, mauto} from './style'\n\nfunction Home() {\n  return (\n    <>\n      <Link\n        to=\"/schedule/C4,0,C6,0,N1,0/Pont%20de%20Strasbourg\"\n        className={cx(\n          'white flex-auto flex ma3 shadow-1 card-transition button weight w-100 mw6 no-underline',\n          cardTransition,\n          css({background: '#1ba1e2'})\n        )}\n      >\n        <div className={cx(mauto)}>\n          <span className=\"f1 db tc\">\n            <FontAwesomeIcon icon=\"bus\" />\n          </span>\n          <span className=\"f4 db tc mt2\">Republique</span>\n        </div>\n      </Link>\n      <Link\n        to=\"/schedule/C4,1,C6,1,N1,1/Republique\"\n        className={cx(\n          'white flex-auto flex ma3 shadow-1 card-transition button weight mw6 w-100 no-underline',\n          cardTransition,\n          css({background: '#fa6800'})\n        )}\n      >\n        <div className={cx(mauto)}>\n          <span className=\"f1 db tc\">\n            <FontAwesomeIcon icon=\"home\" />\n          </span>\n          <span className=\"f4 db tc mt2\">Home</span>\n        </div>\n      </Link>\n    </>\n  )\n}\n\nexport default Home\n","import axios from 'axios'\n\nconst parseQuery = ({records}) => {\n  return records.map(x => {\n    return {\n      departure: new Date(x.fields.depart),\n      idligne: x.fields.nomcourtligne,\n      idcourse: x.fields.idcourse,\n    }\n  })\n}\n\nconst makePair = line => {\n  const chunks = line.split(',')\n  const make = chunks => {\n    if (chunks.length === 0) return []\n    else {\n      const [a, b, ...rest] = chunks\n      return [[a, b], ...make(rest)]\n    }\n  }\n  return make(chunks)\n}\n\nconst makeQuery = (lines, stop) => {\n  const chunk = lines\n    .map(([line, sens]) => {\n      return `(nomcourtligne=\"${line}\" AND sens=\"${sens}\")`\n    })\n    .join(' OR ')\n\n  const rq = {\n    q: `(${chunk}) AND nomarret=\"${stop}\"`,\n    row: 10,\n    timezone: 'Europe/Paris',\n    sort: '-depart',\n    dataset: 'tco-bus-circulation-passages-tr',\n  }\n\n  return rq\n}\n\nexport default async (line, stop) => {\n  const lines = makePair(line)\n  const q = makeQuery(lines, stop)\n\n  const {data} = await axios.get(\n    `https://data.explore.star.fr/api/records/1.0/search`,\n    {params: q}\n  )\n  return parseQuery(data)\n}\n","import React, {useEffect, useState} from 'react'\nimport {withRouter} from 'react-router-dom'\nimport {Link} from 'react-router-dom'\nimport {css, cx} from 'emotion'\nimport Spinner from 'react-spinkit'\nimport {distanceInWordsToNow} from 'date-fns'\n\nimport {cardTransition, mauto} from './style'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\n\nimport fetchSchedule from './fetchSchedule'\n\nfunction useSchedule(line, stop) {\n  const [isFetching, setIsFetching] = useState(false)\n  const [schedule, setSchedule] = useState(null)\n\n  useEffect(\n    () => {\n      setIsFetching(true)\n      fetchSchedule(line, stop)\n        .then(data => {\n          setSchedule(data)\n        })\n        .catch(() => {\n          setSchedule(null)\n        })\n        .finally(() => {\n          setIsFetching(false)\n        })\n    },\n    [line, stop]\n  )\n\n  return [isFetching, schedule]\n}\n\nfunction Placeholder() {\n  return (\n    <div className={mauto}>\n      <Spinner color=\"white\" fadeIn=\"none\" />\n    </div>\n  )\n}\n\nfunction ScheduleContainer({match}) {\n  const {line, stop} = match.params\n  const [isFetching, schedule] = useSchedule(line, stop)\n\n  return (\n    <>\n      {!isFetching && schedule ? (\n        schedule.map(({idcourse: id, idligne: ligne, departure}) => (\n          <div\n            key={id}\n            className={cx(\n              `white flex-auto flex ma2-ns ma1 shadow-1 ${cardTransition} button weight w-100 mw6 no-underline items-center ph3`,\n              css({background: '#ce352C'})\n            )}\n          >\n            <div className=\"b\">{ligne}</div>\n            <div className=\"ml3 i\">{distanceInWordsToNow(departure)}</div>\n          </div>\n        ))\n      ) : (\n        <Placeholder />\n      )}\n      <Link to=\"/\" className=\"no-underline white f1 ma3-ns ma1\">\n        <FontAwesomeIcon icon=\"arrow-circle-left\" />\n      </Link>\n    </>\n  )\n}\n\nexport default withRouter(ScheduleContainer)\n","import React from 'react'\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {\n  faBus,\n  faHome,\n  faArrowCircleLeft,\n} from '@fortawesome/free-solid-svg-icons'\nimport Home from './Home'\nimport Schedule from './Schedule'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\n\nlibrary.add(faBus, faHome, faArrowCircleLeft)\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"flex flex-column h-100 pa3 bg-near-black items-center\">\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/schedule/:line/:stop\" component={Schedule} />\n        </Switch>\n      </div>\n    </HashRouter>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}