{"version":3,"sources":["Home.js","Schedule.js","SchedulePlaceholder.js","ScheduleContainer.js","App.js","serviceWorker.js","index.js"],"names":["cardTransition","css","_templateObject","mauto","margin","Home","react_default","a","createElement","Fragment","Link","to","className","cx","background","react_fontawesome_index_es","icon","Schedule","_ref","schedule","map","_ref2","id","idcourse","ligne","idligne","departure","key","distanceInWordsToNow","SchedulePlaceholder","i","dist_default","color","fadeIn","ScheduleContainer","state","_this2","this","_this$props$match$par","props","match","params","line","stop","q","lines","chunk","_ref3","Object","slicedToArray","sens","concat","join","row","timezone","sort","dataset","makeQuery","make","chunks","length","_chunks","toArray","b","rest","slice","toConsumableArray","split","makePair","axios","get","then","_ref4","data","setState","records","x","Date","fields","depart","nomcourtligne","React","Component","withRouter","library","add","faBus","faHome","faArrowCircleLeft","App","HashRouter","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.15362e10.chunk.js","sourcesContent":["import React from 'react'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {Link} from 'react-router-dom'\nimport {cx, css} from 'emotion'\n\nconst cardTransition = css`\n  transform: scale(1);\n  transition: all 0.3s ease 0s;\n\n  &:hover {\n    outline: rgba(29, 29, 29, 0.1) solid 4px;\n  }\n`\n\nconst mauto = css({margin: 'auto'})\n\nexport default function() {\n  return (\n    <>\n      <Link\n        to=\"/schedule/C4,0,C6,0,N1,0/Pont%20de%20Strasbourg\"\n        className={cx(\n          'white flex-auto flex ma3 shadow-1 card-transition button weight w-100 mw6 no-underline',\n          cardTransition,\n          css({background: '#1ba1e2'})\n        )}\n      >\n        <div className={cx(mauto)}>\n          <span className=\"f1 db tc\">\n            <FontAwesomeIcon icon=\"bus\" />\n          </span>\n          <span className=\"f4 db tc mt2\">Republique</span>\n        </div>\n      </Link>\n      <Link\n        to=\"/schedule/C4,1,C6,1,N1,1/Republique\"\n        className={cx(\n          'white flex-auto flex ma3 shadow-1 card-transition button weight mw6 w-100 no-underline',\n          cardTransition,\n          css({background: '#fa6800'})\n        )}\n      >\n        <div className={cx(mauto)}>\n          <span className=\"f1 db tc\">\n            <FontAwesomeIcon icon=\"home\" />\n          </span>\n          <span className=\"f4 db tc mt2\">Home</span>\n        </div>\n      </Link>\n    </>\n  )\n}\n","import React from 'react'\nimport {css, cx} from 'emotion'\nimport {Link} from 'react-router-dom'\nimport {distanceInWordsToNow} from 'date-fns'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\n\nexport default ({schedule}) => {\n  return (\n    <>\n      {schedule.map(({idcourse: id, idligne: ligne, departure}) => (\n        <div\n          key={id}\n          className={cx(\n            'white flex-auto flex ma2 shadow-1 card-transition button weight w-100 mw6 no-underline items-center ph3',\n            css({background: '#ce352C'})\n          )}\n        >\n          <div className=\"b\">{ligne}</div>\n          <div className=\"ml3 i\">{distanceInWordsToNow(departure)}</div>\n        </div>\n      ))}\n      <Link to=\"/\" className=\"no-underline white f1 ma3\">\n        <FontAwesomeIcon icon=\"arrow-circle-left\" />\n      </Link>\n    </>\n  )\n}\n","import React from 'react'\nimport {css, cx} from 'emotion'\n\nimport {Link} from 'react-router-dom'\nimport Spinner from 'react-spinkit'\n\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\n\nexport default ({schedule}) => {\n  return (\n    <>\n      {[0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map(i => (\n        <div\n          key={i}\n          className={cx(\n            'white flex-auto flex ma2 shadow-1 card-transition button weight w-100 mw6 no-underline items-center ph3',\n            css({background: '#ce352C'})\n          )}\n        >\n          <div>\n            <Spinner color=\"white\" fadeIn=\"none\" />\n          </div>\n        </div>\n      ))}\n      <Link to=\"/\" className=\"no-underline white f1 ma3\">\n        <FontAwesomeIcon icon=\"arrow-circle-left\" />\n      </Link>\n    </>\n  )\n}\n","import React from 'react'\nimport {withRouter} from 'react-router-dom'\nimport Schedule from './Schedule'\nimport axios from 'axios'\nimport SchedulePlaceholder from './SchedulePlaceholder'\n\nconst parseQuery = ({records}) => {\n  return records.map(x => {\n    return {\n      departure: new Date(x.fields.depart),\n      idligne: x.fields.nomcourtligne,\n      idcourse: x.fields.idcourse,\n    }\n  })\n}\n\nconst makePair = line => {\n  const chunks = line.split(',')\n  const make = chunks => {\n    if (chunks.length === 0) return []\n    else {\n      const [a, b, ...rest] = chunks\n      return [[a, b], ...make(rest)]\n    }\n  }\n  return make(chunks)\n}\n\nconst makeQuery = (lines, stop) => {\n  const chunk = lines\n    .map(([line, sens]) => {\n      return `(nomcourtligne=\"${line}\" AND sens=\"${sens}\")`\n    })\n    .join(' OR ')\n\n  const rq = {\n    q: `(${chunk}) AND nomarret=\"${stop}\"`,\n    row: 10,\n    timezone: 'Europe/Paris',\n    sort: '-depart',\n    dataset: 'tco-bus-circulation-passages-tr',\n  }\n\n  return rq\n}\n\nclass ScheduleContainer extends React.Component {\n  state = {\n    schedule: [],\n  }\n\n  componentDidMount() {\n    const {line, stop} = this.props.match.params\n    const lines = makePair(line)\n    const q = makeQuery(lines, stop)\n\n    axios\n      .get(`https://data.explore.star.fr/api/records/1.0/search`, {params: q})\n      .then(({data}) => {\n        this.setState({\n          schedule: parseQuery(data),\n        })\n      })\n  }\n\n  render() {\n    return this.state.schedule.length ? (\n      <Schedule schedule={this.state.schedule} />\n    ) : (\n      <SchedulePlaceholder />\n    )\n  }\n}\n\nexport default withRouter(ScheduleContainer)\n","import React, {Component} from 'react'\n\nimport {library} from '@fortawesome/fontawesome-svg-core'\nimport {\n  faBus,\n  faHome,\n  faArrowCircleLeft,\n} from '@fortawesome/free-solid-svg-icons'\nimport Home from './Home'\nimport ScheduleContainer from './ScheduleContainer'\nimport {HashRouter, Switch, Route} from 'react-router-dom'\n\nlibrary.add(faBus, faHome, faArrowCircleLeft)\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"flex flex-column h-100 pa3 bg-near-black items-center\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/schedule/:line/:stop\" component={ScheduleContainer} />\n          </Switch>\n        </div>\n      </HashRouter>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}